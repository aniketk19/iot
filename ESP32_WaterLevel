#include <WiFi.h>
#include <WebServer.h>

// Replace with your network credentials
const char* ssid = "HomeNetwork";
const char* password = "123456789";

// HC-SR05 pins
const int trigPin = 25;  // GPIO 25
const int echoPin = 27;  // GPIO 18 (change this to a compatible pin)

// Create WebServer object on port 80
WebServer server(80);

// Function to measure distance using HC-SR05
int measureDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  int distance = duration * 0.034 / 2; // Convert to cm
  return distance;
}

// Handle root URL
void handleRoot() {
  int distance = measureDistance();

  // Print distance to Serial Monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Create HTML response
  String html = "<!DOCTYPE HTML><html><head><title>Water Level Monitoring</title>";
  html += "<meta http-equiv='refresh' content='1'></head><body>";
  html += "<h1>Water Level Monitoring</h1>";
  html += "<p>Level: <span id='distance'>" + String(distance) + "</span> cm</p>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);

  // Initialize HC-SR05 pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Print ESP32 IP address
  Serial.println(WiFi.localIP());

  // Define server routes
  server.on("/", handleRoot);

  // Start server
  server.begin();
}

void loop() {
  // Handle client requests
  server.handleClient();
}
